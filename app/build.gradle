apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

import java.text.DateFormat
import java.text.SimpleDateFormat

static def getDateTime() {
    DateFormat df = new SimpleDateFormat("YYYY-MM-d-HHmm")
    return df.format(new Date())
}

android {

    dataBinding {
        enabled = true
    }

    compileSdkVersion 33
    defaultConfig {
        applicationId "com.app.torchapp"
        minSdkVersion 21
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mode"
    productFlavors {
        development {
            buildConfigField "String", "HOST", "\"http://192.168.1.167/\""
            buildConfigField "String", "BASE_URL", "\"torch-web-api/public/api/\""
            versionCode 4
            versionName "1.4"
        }
        production {
            buildConfigField "String", "HOST", "\"http://sb3awsb3en.store\""
            buildConfigField "String", "BASE_URL", "\"/public/api/\""
            versionCode 4
            versionName "1.4"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            buildConfigField "String", "APP_BUILD_NUM", "\"" + getDateTime() + "\""
        }
    }

    buildTypes.each {
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    api "androidx.activity:activity-ktx:1.6.1"
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.3.0-beta01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'

    implementation 'androidx.work:work-runtime:2.8.0'

    //fo live data and view model
    def lifecycle_version = "2.0.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //for retrofit and gson parser
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'

    //Language
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'

    //kotlin core coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'

    //coroutines for android
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    //retrofit with coroutines
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    implementation 'androidx.core:core:1.0.0'

    //dagger
    implementation 'com.google.dagger:dagger:2.22.1'
    implementation 'com.google.dagger:dagger-android-support:2.22.1'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-compiler:2.22.1'

    implementation 'androidx.multidex:multidex:2.0.0'

    //country picker
    implementation 'com.github.mukeshsolanki:country-picker-android:1.1.9'

    //Add Firebase Core
    implementation 'com.google.firebase:firebase-core:17.0.1'
    //Add FCM
    implementation 'com.google.firebase:firebase-messaging:19.0.1'

    //skeleton layout
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'

    implementation 'de.hdodenhof:circleimageview:3.0.0'

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'me.relex:circleindicator:2.1.6'
    implementation 'com.makeramen:roundedimageview:2.3.0'

    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    implementation 'com.karumi:dexter:6.2.2'
    implementation 'io.coil-kt:coil:1.1.1'

    implementation 'androidx.palette:palette:1.0.0'

    implementation project(':slider')
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.android.support:support-v13:+'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'

    implementation 'com.google.zxing:core:3.5.1'
    annotationProcessor "com.google.dagger:dagger-android-processor:2.11"
}
